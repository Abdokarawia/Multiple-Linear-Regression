# -*- coding: utf-8 -*-
"""M LR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OaXDYtKSmQcNGmQAfNJ6ST9fXOMW1vwp
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

EDS = pd.read_csv('/content/FuelConsumptionCo2.csv')
EDS.head()   # Showing a sample of the dataset

EDS.describe()

DS = EDS [['ENGINESIZE', 'CYLINDERS', 'FUELCONSUMPTION_COMB', 'CO2EMISSIONS']]  # Dataset which we will work on
DS.head(9)

DS.hist()
plt.show()

plt.scatter(DS.ENGINESIZE, DS.CO2EMISSIONS)
plt.show()

plt.scatter(DS.CYLINDERS, DS.CO2EMISSIONS)
plt.show()

plt.scatter(DS.FUELCONSUMPTION_COMB, DS.CO2EMISSIONS)
plt.show()

mask = np.random.rand(len(DS)) < 0.8  # 80 %  of the DS will be true
train = DS[mask]
test  = DS[~mask]

plt.scatter(train.ENGINESIZE, train.CO2EMISSIONS)
plt.show()

from sklearn.linear_model import LinearRegression
LR = LinearRegression()
x_train = train[['ENGINESIZE', 'CYLINDERS', 'FUELCONSUMPTION_COMB']]
y_train = train[['CO2EMISSIONS']]
LR.fit(x_train, y_train )

Coef = LR.coef_
Inter = LR.intercept_
print(np.round(Coef, 2))
print(np.round(Inter, 2))

from sklearn.metrics import r2_score
test_x = test[['ENGINESIZE', 'CYLINDERS', 'FUELCONSUMPTION_COMB']]
test_y = test[['CO2EMISSIONS']]
Ptest_y = LR.predict(test_x)
MAE = np.mean(np.abs(Ptest_y-test_y))
MSE = np.mean(np.abs((Ptest_y-test_y)** 2))
R2= r2_score(test_y , Ptest_y)  # R squared value best value is 1.00
print("Mean absolute error: %.2f" % MAE)
print("Residual sum of squares (MSE): %.2f" % MSE)
print("R2-score: %.4f" % R2 )

